#!/bin/bash
#===============================================================================
:<<LICENSE

    Copyright 2007-2012 Christopher Barry <christopher.r.barry@gmail.com>

    This file is part of the bash-color-tools

    bash-color-tools is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

LICENSE

#===============================================================================
# install
#-------------------------------------------------------------------------------
# installation script for bash-color-tools
#===============================================================================

(( ${BASH_VERSINFO:-0} >= 4 )) || {
    echo "Sorry, gotta have bash version >= 4 to run bash-color-tools."
    exit 1
}

#-------------------------------------------------------------------------------
function _install_()
{
    local inst_prefix=${1}
    local pkg_dir=${0%/*}

    mkdir -p ${inst_prefix}/share{/doc,}/bash-color-tools 2>/dev/null || {
        echo "you do not have permission to install in ${inst_prefix}/share/."
        return 1
    }
    rsync -a ${pkg_dir}/src/{contrib,libexec,themes} ${inst_prefix}/share/bash-color-tools/ || return 1
    rsync -a ${pkg_dir}/install ${inst_prefix}/share/bash-color-tools/libexec/ || return 1
    chmod 755 ${inst_prefix}/share/bash-color-tools/libexec/{face,print-face-colors,install} || return 1
    (cd ${inst_prefix}/share/bash-color-tools/libexec; ln -sf install uninstall) || return 1

    rsync -a ${pkg_dir}/examples ${inst_prefix}/share/doc/bash-color-tools/ || return 1
    rsync -a ${pkg_dir}/man ${inst_prefix}/share/doc/bash-color-tools/ || return 1
    rsync -a $(find ${pkg_dir} -maxdepth 1 -type f -a -not -name install 2>/dev/null) \
        ${inst_prefix}/share/doc/bash-color-tools/ || return 1

    find ${inst_prefix}/share{/doc,}/bash-color-tools -type f 2>/dev/null \
        >${inst_prefix}/share/doc/bash-color-tools/MANIFEST
}

#-------------------------------------------------------------------------------
function _uninstall_()
{
    local inst_prefix=${1}
    local -a inst_files=( $(<${inst_prefix}/share/doc/bash-color-tools/MANIFEST) )
    local -a files=()

    for f in "${inst_files[@]}"; do
        rm -f ${f}
    done

    files=( $(find ${inst_prefix}/share/bash-color-tools -type f) )
    [[ ${#files[@]} -gt 0 ]] && {
        echo "directory ${inst_prefix}/share/bash-color-tools is not empty, so not deleting it."
    } || {
        rm -rf ${inst_prefix}/share/bash-color-tools
    }

    files=( $(find ${inst_prefix}/share/doc/bash-color-tools -type f) )
    [[ ${#files[@]} -gt 0 ]] && {
        echo "directory ${inst_prefix}/share/doc/bash-color-tools is not empty, so not deleting it."
    } || {
        rm -rf ${inst_prefix}/share/doc/bash-color-tools
    }

    [[ -f /etc/profile.d/bash-color-tools.sh ]] && rm -f /etc/profile.d/bash-color-tools.sh

    # remove all functions and vars from environment
    unset -f $(typeset -F | grep prompt_ | cut -d' ' -f3) 2>/dev/null
    unset $(set | grep PROMPT_ | awk -F= '{ print $1 }')  2>/dev/null
    unset THEME THEME_DIR

    sed -i "s,^\(.*/bctrc$\),#\1,"  ~/.bashrc

    return 0
}

#-------------------------------------------------------------------------------
function _install_links_()
{
    local inst_prefix=${1}
    (
        mkdir -p ${inst_prefix}/bin
        cd ${inst_prefix}/bin
        ln -sf ${inst_prefix}/share/bash-color-tools/libexec/face || return 1
        ln -sf ${inst_prefix}/share/bash-color-tools/libexec/print-face-colors || return 1
        ln -sf ${inst_prefix}/share/bash-color-tools/libexec/install setup-prompt || return 1
    )
}

#-------------------------------------------------------------------------------
function _uninstall_links_()
{
    local inst_prefix=${1}
    [[ -f ${inst_prefix}/bin/face ]] && rm -f ${inst_prefix}/bin/face
    [[ -f ${inst_prefix}/bin/print-face-colors ]] && rm -f ${inst_prefix}/bin/print-face-colors
    [[ -f ${inst_prefix}/bin/setup-prompt ]] && rm -f ${inst_prefix}/bin/setup-prompt
}

#-------------------------------------------------------------------------------
function _set_themes_dir_()
{
    local inst_prefix=${1}
    sed -i "s,^declare THEME_DIR=.*$,declare THEME_DIR=${inst_prefix}/share/bash-color-tools/themes," \
        ${inst_prefix}/share/bash-color-tools/libexec/prompt || return 1
}

#-------------------------------------------------------------------------------
function _setup_etc_profile_()
{
    local inst_prefix=${1}

    if _verify_permissions_ /etc/profile.d; then
        # we can setup global source of libs
        cat > /etc/profile.d/bash-color-tools.sh <<EOF
#!/bin/bash
# source bash-color-tools libraries
# for prompt and _face() usage
BCT=${inst_prefix}/share/bash-color-tools/libexec
if [[ -d \${BCT} \\
    && -f \${BCT}/face \\
    && -f \${BCT}/prompt \\
    && -f \${BCT}/facecolors.rgb ]]; then

    # source bash-color-tools libs
    source \${BCT}/facecolors.rgb
    source \${BCT}/face libmode
    source \${BCT}/prompt
fi

EOF
        return 0
    else
        return 1
    fi
}

#-------------------------------------------------------------------------------
function _setup_bashrc_()
{
    local inst_prefix=${1}

    cat > ~/.bctrc <<EOF
#
# source bash-color-tools libraries
# for prompt and _face() usage
BCT=${inst_prefix}/share/bash-color-tools/libexec
if [[ -d \${BCT} \\
    && -f \${BCT}/face \\
    && -f \${BCT}/prompt \\
    && -f \${BCT}/facecolors.rgb ]]; then

    # source bash-color-tools libs
    source \${BCT}/facecolors.rgb
    source \${BCT}/face libmode
    source \${BCT}/prompt

else
    echo "Error: \${BCT}/ and/or specific files within it are missing..."
    echo "Is bash-color-tools actually installed?"
    echo "If not, remove or comment out the 'source ~/.bctrc' code from your ~/.bashrc"
fi

# use 'prompt save' to save current theme to autostart.
prompt progit

EOF

    [[ $(grep 'source.*bctrc' ~/.bashrc) ]] || {
        echo "" >>~/.bashrc
        echo "# initialize bash-color-tools prompt code" >>~/.bashrc
        echo "source ~/.bctrc" >>~/.bashrc

    }
}

#-------------------------------------------------------------------------------
function _welcome_output_()
{
    local inst_prefix=${1}

    ${inst_prefix}/bin/face -f  042 "bash-color-tools are installed"
    ${inst_prefix}/bin/face -nf 015 "see "
    ${inst_prefix}/bin/face -nf 033 "${inst_prefix}/share/doc/bash-color-tools/* "
    ${inst_prefix}/bin/face -f  015 "for more info"
    ${inst_prefix}/bin/face -nf 015 "run: "
    ${inst_prefix}/bin/face -nf 033 ". ~/.bashrc"
    ${inst_prefix}/bin/face -nf 015 " to load the libs, then run: "
    ${inst_prefix}/bin/face -f  033 "prompt list"
    ${inst_prefix}/bin/face -f  015 "for a list of available prompt themes"
}

#-------------------------------------------------------------------------------
# make sure we can access this prefix location
function _verify_permissions_()
{
    local inst_prefix=${1}
    local tstfn="${inst_prefix}/${RANDOM}-${RANDOM}-${RANDOM}"
    touch "${tstfn}" 2>/dev/null && {
        rm -f "${tstfn}"
    } || {
        return 1
    }
    return 0
}

#===============================================================================
# (un)install bash-color-tools
[[ ${PREFIX} ]] || PREFIX=/usr

case ${0##*/} in

    install)
        _verify_permissions_ ${PREFIX} || {
            echo "Oops! you do not have permission to install into ${PREFIX}."
            echo "use sudo, or: 'PREFIX=/a/dir/you/own ./install' for non-privileged installations"
            exit 1
        }
        [[ "${0}" =~ ${PREFIX} ]] && { echo "uninstall, then install from the original package."; exit 1; }
        _install_ ${PREFIX} || { echo "installation failed."; exit 1; }
        _install_links_ ${PREFIX} || { echo "installation of links failed."; exit 1; }
        _set_themes_dir_ ${PREFIX} || { echo "configuring prompt themes directory failed."; exit 1; }
        _setup_etc_profile_ ${PREFIX} || {
            echo "permissions prevent installing global settings in:"
            echo "/etc/profile.d/bash-color-tools.sh"
        }
        _setup_bashrc_ ${PREFIX}
        _welcome_output_ ${PREFIX}
        echo
        ${PREFIX}/bin/face -f 015 "run: 'setup-prompt' as each user to set prompt to autostart"
        [[ "$(which print-face-colors)" ]] || {
            ${PREFIX}/bin/face -f red "dont forget to add '${PREFIX}/bin' to your PATH variable in ~/.bashrc"
        }
        ;;

    uninstall)
        PREFIX=$(echo ${0} | sed 's,/share/bash-color-tools/libexec/uninstall,,')
        [[ -f ${PREFIX}/share/doc/bash-color-tools/MANIFEST ]] || { echo "bash-color-tools is not correctly installed in ${PREFIX}/share. quitting."; exit 1; }
        _verify_permissions_ ${PREFIX} || { echo "you do not have permission to uninstall from ${PREFIX}."; exit 1; }
        (
            cd /tmp
            _uninstall_links_ ${PREFIX} || { echo "uninstallation of links failed."; exit 1; }
            _uninstall_ ${PREFIX} || { echo "uninstallation failed."; exit 1; }
            echo "bash-color-tools have been uninstalled"
        )
        ;;

    setup-prompt)
        PREFIX=$(echo ${0} | sed 's,/bin/setup-prompt,,')
        _setup_bashrc_ ${PREFIX}
        _welcome_output_ ${PREFIX}
        ;;

esac
